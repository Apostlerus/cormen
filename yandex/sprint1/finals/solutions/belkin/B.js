/**
 * –ù—É –∏ –æ–ø—è—Ç—å –æ—Å–æ–±–æ –Ω–µ —Ä–∞–∑–≥—É–ª—è–µ—à—å—Å—è —Å —Ä–µ—à–µ–Ω–∏–µ–º, –Ω–µ –ø–æ–Ω–∏–º–∞—é —á—Ç–æ –≤ —ç—Ç–∏—Ö –∑–∞–¥–∞—á–∞—Ö
 * —Ç–∞–∫–æ–≥–æ, —á—Ç–æ –æ–Ω–∏ —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ. –†–∞–∑–≤–µ —á—Ç–æ –±–æ–ª–µ–µ "–∫–ª—ë–≤—ã–µ" —É—Å–ª–æ–≤–∏—è.
 *
 * –ü–æ—Å–º–æ—Ç—Ä–µ–ª –∫–∞–∫ —Ç—ã —Ç–∞–º –æ—Ñ–æ—Ä–º–∏–ª –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ –∑–∞–¥–∞—á–∏. –ù—É, –∫–æ–Ω–µ—á–Ω–æ, –Ω–µ –ø–æ–Ω–∏–º–∞—é,
 * –∑–∞—á–µ–º –∑–∞—Å—Ç–∞–≤–∏–ª–∏ –≤—Å—ë —ç—Ç–æ –¥–µ–ª–∞—Ç—å. –Ø –µ—â–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª –ø—Ä—è–º –∫–ª–∞—Å—Å–æ–º –æ—Ñ–æ—Ä–º–∏—Ç—å,
 * –Ω–æ –Ω–µ –≤–∫—É—Ä–∏–ª –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –≤–≤–æ–¥ –ø–æ–≤–µ—à–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ê —Å —Ñ–∞–π–ª–æ–º –Ω–µ —Ö–æ—á–µ—Ç—Å—è
 * –∑–∞–º–æ—Ä–∞—á–∏–≤–∞—Ç—å—Å—è:)
 *
 * –î–∞ —Ç–∞–º –ø—Ä–æ–≤–µ—Ä—è—é—â–∞—è, –ø–æ—Ö–æ–¥—É, —É–∫—É—Ä–µ–Ω–Ω–∞—è –±—ã–ª–∞üòÖ –ü—Ä–∏–∫–æ–ª—å–Ω–æ —Ç—ã –≤—Å–µ —Å–æ–µ–¥–∏–Ω–∏–ª –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É!
 */
function sleightOfHand(k, lines) {
  let digitsCount = new Array(10).fill(0);
  let points = 0;
  k *= 2;
  lines = lines.join('');
  for (let i = 0; i < 16; i++) {
    if (lines[i] === '.') {
      continue;
    }
    digitsCount[parseInt(lines[i])]++;
  }
  for (let i = 1; i <= 9; i++) {
    if (digitsCount[i] && k >= digitsCount[i]) {
      points++;
    }
  }
  return points;
}

const reader = require('readline').createInterface({
  input: process.stdin,
});
const inputLines = [];
reader.on('line', line => {
  inputLines.push(line);
});
process.stdin.on('end', () => {
  const k = inputLines[0];
  const lines = inputLines.slice(1);
  let res = sleightOfHand(k, lines);
  process.stdout.write(res + '');
  process.exit();
});
