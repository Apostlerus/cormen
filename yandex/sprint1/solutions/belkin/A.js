/**
 * Ну, хз, что тут еще реализовывать:) Думал попробовать написать
 * универсальный многочлен, но вспомнил, мы ж его писали, да там еще и с хорошим алгоритмом,
 * так что фиг с ним.
 *
 * Ну и надо было посмотреть, как лучше ввод и вывод писать, так что ненароком твою функцию
 * подсмотрел сразу.
 */
function powerSeries(x, a, b, c) {
  return (a * x * x) + (b * x) + c;
}

/**
 * Малость "подмял" под себя твой ридер.
 * Хотел заюзать пример, который сам яндекс в справочнике предлагает,
 * но у них там в примере чистый stdin, он линии не читает нормально.
 * А в твоём примере мне не нравятся подчеркушки:) Кажутся лишними.
 * И вывод яндекс предлагает строкой через stdout, это взял у них.
 * Ну и хочется решение оформлять в виде именованной отдельной функции
 * без чтения линий в ней самой.
 */
const reader = require('readline').createInterface({
  input: process.stdin
});
const inputLines = [];
reader.on('line', line => {
  inputLines.push(line);
});
process.stdin.on('end', () => {
  const [a, x, b, c] = inputLines[0].split(' ').map(num => parseInt(num));
  let res = powerSeries(x, a, b, c);
  process.stdout.write(res + '');
  process.exit();
});
